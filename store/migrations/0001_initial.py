# Generated by Django 3.2.18 on 2024-07-05 07:57

from django.db import migrations, models
import django.db.models.deletion
import django_ckeditor_5.fields
import shortuuid.django_fields
import userauths.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', length=10, max_length=20, prefix='', unique=True)),
                ('title', models.CharField(max_length=100)),
                ('title_meta_title', models.CharField(blank=True, max_length=150, null=True)),
                ('meta_description', models.CharField(blank=True, max_length=10000, null=True)),
                ('tags', models.CharField(blank=True, max_length=10000, null=True)),
                ('meta_title', models.SlugField(blank=True, null=True, unique=True)),
                ('image', models.ImageField(blank=True, default='brand.png', null=True, upload_to='brand')),
                ('alt', models.CharField(blank=True, max_length=100, null=True)),
                ('featured', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Brands',
            },
        ),
        migrations.CreateModel(
            name='CallToActionBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', length=10, max_length=20, prefix='', unique=True)),
                ('banner', models.ImageField(default='cta banner.png', upload_to='cta banner')),
                ('banner_mobile', models.ImageField(default='cta monile banner.png', upload_to='cta banner')),
                ('banner_alt', models.CharField(blank=True, max_length=100, null=True)),
                ('CTA_type', models.CharField(choices=[('top_deal', 'top-deal'), ('pre_owned', 'pre-owned'), ('playstation', 'playstation'), ('nintendo', 'nintendo'), ('xbox', 'xbox'), ('first', 'First'), ('second', 'Second'), ('third', 'Third'), ('fourth', 'Fourth')], max_length=100)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='CartOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_status', models.CharField(choices=[('paid', 'Paid'), ('pending', 'Pending'), ('processing', 'Processing'), ('cancelled', 'Cancelled'), ('initiated', 'Initiated'), ('failed', 'failed'), ('refunding', 'refunding'), ('refunded', 'refunded'), ('unpaid', 'unpaid'), ('expired', 'expired')], default='initiated', max_length=100)),
                ('payment_ref', models.CharField(blank=True, max_length=200, null=True)),
                ('order_status', models.CharField(choices=[('pending', 'pending'), ('initiated', 'Initiated'), ('fulfilled', 'fulfilled'), ('partially_fulfilled', 'Partially Fulfilled'), ('cancelled', 'Cancelled')], default='pending', max_length=100)),
                ('delivery_status', models.CharField(choices=[('on_hold', 'On Hold'), ('shipping_processing', 'Shipping Processing'), ('shipped', 'Shipped'), ('arrived', 'Arrived'), ('delivered', 'Delivered'), ('returning', 'Returning'), ('returned', 'Returned')], default='on_hold', max_length=100)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('shipping', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('vat', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('service_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('total', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('original_total', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('saved', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Amount saved by customer', max_digits=12, null=True)),
                ('full_name', models.CharField(max_length=1000)),
                ('email', models.CharField(max_length=1000)),
                ('mobile', models.CharField(max_length=1000)),
                ('state', models.CharField(blank=True, max_length=1000, null=True)),
                ('town_city', models.CharField(blank=True, max_length=1000, null=True)),
                ('address', models.CharField(blank=True, max_length=1000, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=1000, null=True)),
                ('shipping_method', models.CharField(choices=[('ship_to_home', 'Ship to Home'), ('pick_up_in_store', 'Pick Up in Store')], default='ship_to_home', max_length=100)),
                ('payment_method', models.CharField(choices=[('credit_card', 'Credit Card'), ('cash', 'Cash')], default='cash', max_length=100)),
                ('billing_state', models.CharField(blank=True, max_length=1000, null=True)),
                ('billing_town_city', models.CharField(blank=True, max_length=1000, null=True)),
                ('billing_address', models.CharField(blank=True, max_length=1000, null=True)),
                ('billing_postal_code', models.CharField(blank=True, max_length=1000, null=True)),
                ('custom_order', models.BooleanField(default=False)),
                ('stripe_payment_intent', models.CharField(blank=True, max_length=200, null=True)),
                ('oid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', length=10, max_length=25, prefix='')),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Cart Order',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='CartOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.IntegerField(default=0)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('total', models.DecimalField(decimal_places=2, default=0.0, help_text='Total of Product price * Product Qty', max_digits=12)),
                ('vat', models.DecimalField(decimal_places=2, default=0.0, help_text='Estimated Vat based on delivery country = tax_rate * (total + shipping)', max_digits=12)),
                ('service_fee', models.DecimalField(decimal_places=2, default=0.0, help_text='Estimated Service Fee = service_fee * total (paid by buyer to platform)', max_digits=12)),
                ('shipping', models.DecimalField(decimal_places=2, default=0.0, help_text='Estimated Shipping Fee = shipping_fee * total', max_digits=12)),
                ('total_payable', models.DecimalField(decimal_places=2, default=0.0, help_text='Vendor Payable Earning Excluding Vendor Sales Fee', max_digits=12)),
                ('grand_total', models.DecimalField(decimal_places=2, default=0.0, help_text='Grand Total of all amount listed above', max_digits=12)),
                ('original_grand_total', models.DecimalField(decimal_places=2, default=0.0, help_text='Grand Total of all amount listed above', max_digits=12)),
                ('coupon_discount_grand_total', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Grand Total after applying coupon', max_digits=12, null=True)),
                ('saved', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Amount saved by customer', max_digits=12, null=True)),
                ('delivery_status', models.CharField(choices=[('on_hold', 'On Hold'), ('shipping_processing', 'Shipping Processing'), ('shipped', 'Shipped'), ('arrived', 'Arrived'), ('delivered', 'Delivered'), ('returning', 'Returning'), ('returned', 'Returned')], default='on_hold', max_length=100)),
                ('tracking_id', models.CharField(blank=True, max_length=100000, null=True)),
                ('invoice_no', models.CharField(max_length=200)),
                ('product', models.CharField(max_length=200)),
                ('product_types_choices', models.JSONField(blank=True, null=True)),
                ('gz_coins', models.IntegerField(blank=True, default=0, null=True)),
                ('image', models.CharField(max_length=200)),
                ('paid', models.BooleanField(default=False)),
                ('paid_vendor', models.BooleanField(default=False)),
                ('cancelled', models.BooleanField(default=False)),
                ('applied_coupon', models.BooleanField(default=False)),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('oid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', length=10, max_length=25, prefix='')),
            ],
            options={
                'verbose_name_plural': 'Cart Order Item',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', length=10, max_length=20, prefix='', unique=True)),
                ('title', models.CharField(max_length=100)),
                ('title_meta_title', models.CharField(blank=True, max_length=150, null=True)),
                ('meta_description', models.CharField(blank=True, max_length=10000, null=True)),
                ('meta_title', models.SlugField(blank=True, null=True, unique=True)),
                ('tags', models.CharField(blank=True, max_length=10000, null=True)),
                ('image', models.ImageField(blank=True, default='category.png', null=True, upload_to='category')),
                ('alt', models.CharField(blank=True, max_length=100, null=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=150, null=True)),
                ('meta_title', models.SlugField(blank=True, null=True, unique=True)),
                ('image', models.ImageField(blank=True, default='choice.png', null=True, upload_to='choice')),
                ('alt', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='gallery.png', upload_to='product_gallery')),
                ('alt', models.CharField(blank=True, max_length=100, null=True)),
                ('active', models.BooleanField(default=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('gid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', length=10, max_length=25, prefix='')),
            ],
            options={
                'verbose_name_plural': 'Product Images',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', length=10, max_length=20, prefix='', unique=True)),
                ('title', models.CharField(max_length=100)),
                ('meta_title', models.SlugField(blank=True, null=True, unique=True)),
                ('image', models.ImageField(blank=True, default='genre.png', null=True, upload_to='genre')),
                ('alt', models.CharField(blank=True, max_length=100, null=True)),
                ('featured', models.BooleanField(default=False)),
                ('featured_image', models.ImageField(blank=True, default='featured genre.png', null=True, upload_to='featured genre')),
                ('featured_alt', models.CharField(blank=True, max_length=100, null=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Genres',
            },
        ),
        migrations.CreateModel(
            name='Mapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=1000)),
                ('value', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', length=10, max_length=20, prefix='', unique=True)),
                ('title', models.CharField(max_length=100)),
                ('meta_title', models.SlugField(blank=True, null=True, unique=True)),
                ('title_meta_title', models.CharField(blank=True, max_length=1000, null=True)),
                ('index', models.IntegerField(blank=True, default=10, null=True)),
                ('image', models.ImageField(default='product.png', upload_to=userauths.models.user_directory_path)),
                ('alt', models.CharField(blank=True, max_length=100, null=True)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True)),
                ('meta_description', models.CharField(blank=True, max_length=10000, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12, null=True)),
                ('old_price', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12, null=True)),
                ('shipping_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('gz_coins', models.IntegerField(blank=True, default=0, null=True)),
                ('show_old_price', models.BooleanField(default=True)),
                ('tags', models.CharField(blank=True, max_length=10000, null=True)),
                ('status', models.CharField(blank=True, choices=[('draft', 'Draft'), ('disabled', 'Disabled'), ('rejected', 'Rejected'), ('in_review', 'In Review'), ('published', 'Published')], default='published', max_length=10, null=True)),
                ('product_condition', models.CharField(blank=True, choices=[('new', 'New'), ('old_2nd_hand', '“Used or 2nd Hand'), ('custom', 'Custom')], default='new', max_length=50, null=True)),
                ('product_condition_rating', models.IntegerField(blank=True, choices=[(1, '1/10'), (2, '2/10'), (3, '3/10'), (4, '4/10'), (5, '5/10'), (6, '6/10'), (7, '7/10'), (8, '8/10'), (9, '9/10'), (10, '10/10')], default=1, null=True)),
                ('product_condition_description', models.CharField(blank=True, max_length=1000, null=True)),
                ('stock_qty', models.IntegerField(default=0)),
                ('in_stock', models.BooleanField(default=True)),
                ('featured', models.BooleanField(default=False)),
                ('game', models.BooleanField(blank=True, default=False, null=True)),
                ('featured_game', models.BooleanField(blank=True, default=False, null=True)),
                ('featured_game_banner', models.ImageField(blank=True, default='featured game banner.png', null=True, upload_to='featured game banner')),
                ('featured_game_banner_alt', models.CharField(blank=True, max_length=100, null=True)),
                ('add_to_featured_games_slider', models.BooleanField(blank=True, default=False, null=True)),
                ('featured_game_slider_banner', models.ImageField(blank=True, default='featured game slider banner.png', null=True, upload_to='featured game slider banner')),
                ('featured_game_slider_mobile_banner', models.ImageField(blank=True, default='featured game slider mobile banner.png', null=True, upload_to='featured game slider banner')),
                ('featured_game_slider_alt', models.CharField(blank=True, max_length=100, null=True)),
                ('hero_section_featured', models.BooleanField(blank=True, default=False, null=True)),
                ('hero_banner', models.ImageField(blank=True, default='hero.png', null=True, upload_to='hero')),
                ('hero_banner_mobile', models.ImageField(blank=True, default='hero_mobile.png', null=True, upload_to='hero')),
                ('hero_alt', models.CharField(blank=True, max_length=100, null=True)),
                ('deal_category', models.CharField(blank=True, choices=[('top_deal', 'top-deal'), ('pre_owned', 'pre-owned'), ('playstation', 'playstation'), ('nintendo', 'nintendo'), ('xbox', 'xbox')], max_length=40, null=True)),
                ('deal_image', models.ImageField(blank=True, default='deal.png', null=True, upload_to='deal')),
                ('deal_alt', models.CharField(blank=True, max_length=100, null=True)),
                ('deal_description', models.CharField(blank=True, max_length=150, null=True)),
                ('catalog_type', models.CharField(blank=True, choices=[('top_games', 'Top Games'), ('top_hardware', 'Top Hardware'), ('top_accessories', 'Top Accessories')], max_length=40, null=True)),
                ('hot_deal', models.BooleanField(default=False)),
                ('digital', models.BooleanField(default=False)),
                ('sku', shortuuid.django_fields.ShortUUIDField(alphabet='1234567890', length=5, max_length=10, prefix='SKU', unique=True)),
                ('type', models.CharField(choices=[('regular', 'Regular'), ('pre_order', 'Pre Order'), ('auction', 'Auction'), ('offer', 'Offer')], default='regular', max_length=10)),
                ('auction_status', models.CharField(choices=[('on_going', 'On Going'), ('finished', 'finished'), ('cancelled', 'cancelled')], default='on_going', max_length=10)),
                ('ending_date', models.DateTimeField(blank=True, null=True)),
                ('bidding_ended', models.BooleanField(default=False)),
                ('views', models.PositiveIntegerField(default=0)),
                ('saved', models.PositiveIntegerField(default=0)),
                ('orders', models.PositiveIntegerField(default=0)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('release_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Products',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ProductBidders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', length=10, max_length=20, prefix='', unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=1.0, max_digits=12)),
                ('active', models.BooleanField(default=True)),
                ('winner', models.BooleanField(default=False)),
                ('win_status', models.CharField(choices=[('won', 'Won'), ('lost', 'Lost'), ('pending', 'pending')], default='pending', max_length=10)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Product Bidders',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ProductFaq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', length=10, max_length=20, prefix='', unique=True)),
                ('email', models.EmailField(max_length=254)),
                ('question', models.CharField(max_length=1000)),
                ('answer', models.CharField(blank=True, max_length=10000, null=True)),
                ('active', models.BooleanField(default=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Product Faqs',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ProductOffers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', length=10, max_length=20, prefix='', unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('message', models.CharField(blank=True, max_length=1000, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=1.99, max_digits=12)),
                ('active', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('accepted', 'Accepted'), ('rejected', 'Rejected'), ('pending', 'Pending')], default='pending', max_length=10)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Product Offers',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.TextField()),
                ('reply', models.CharField(blank=True, max_length=1000, null=True)),
                ('rating', models.IntegerField(choices=[(1, '★☆☆☆☆'), (2, '★★☆☆☆'), (3, '★★★☆☆'), (4, '★★★★☆'), (5, '★★★★★')], default=None)),
                ('active', models.BooleanField(default=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Reviews & Rating',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Specification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', length=10, max_length=20, prefix='', unique=True)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='specifications', to='store.product')),
            ],
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', length=10, max_length=20, prefix='', unique=True)),
                ('title', models.CharField(max_length=150, null=True)),
                ('meta_title', models.SlugField(blank=True, null=True, unique=True)),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_types', to='store.product')),
            ],
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', length=10, max_length=20, prefix='', unique=True)),
                ('title', models.CharField(max_length=100)),
                ('meta_title', models.SlugField(blank=True, null=True, unique=True)),
                ('image', models.ImageField(blank=True, default='sub_category.png', null=True, upload_to='sub_category')),
                ('alt', models.CharField(blank=True, max_length=100, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='store.category')),
                ('parent_subcategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_subcategories', to='store.subcategory')),
            ],
            options={
                'verbose_name_plural': 'Sub Categories',
            },
        ),
        migrations.CreateModel(
            name='SpecificationValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', length=10, max_length=20, prefix='', unique=True)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('specification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='values', to='store.specification')),
            ],
        ),
    ]
